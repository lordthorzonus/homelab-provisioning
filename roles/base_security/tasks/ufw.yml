---
- name: Ensure ufw is present
  apt:
    name: ufw
    state: present
    update_cache: true

- name: Enable ufw service
  community.general.ufw:
    state: enabled

- name: Deny all incoming traffic
  community.general.ufw:
    default: deny
    direction: incoming
  notify: reload ufw

- name: Allow all outgoing traffic
  community.general.ufw:
    default: allow
    direction: outgoing
  notify: reload ufw

- name: Allow ssh access
  community.general.ufw:
    rule: allow
    port: "22"
    proto: tcp
    src: "{{ item }}"
  loop:
    - "{{ main_vlan_network }}"
    - "{{ lan_network }}"
    - "{{ remote_vpn_network }}"
  notify: reload ufw

- name: Allow http port
  when: security_allow_http_traffic | default(false)
  community.general.ufw:
    rule: allow
    port: "80"
    proto: tcp
    src: "{{ item }}"
  loop: "{{ allowed_network_sources }}"
  notify: reload ufw

- name: Allow https port
  when: security_allow_https_traffic | default(false)
  community.general.ufw:
    rule: allow
    port: "443"
    proto: tcp
    src: "{{ item }}"
  loop: "{{ allowed_network_sources }}"
  notify: reload ufw

- name: Allow mqqts port
  when: security_allow_mqtt_traffic | default(false)
  community.general.ufw:
    rule: allow
    port: "8883"
    proto: tcp
    src: "{{ item }}"
  loop: "{{ allowed_network_sources }}"
  notify: reload ufw

- name: Allow influxdb port
  when: security_allow_influxdb_traffic | default(false)
  community.general.ufw:
    rule: allow
    port: "8086"
    proto: tcp
    src: "{{ item }}"
  loop: "{{ allowed_network_sources }}"
  notify: reload ufw

- name: Allow host specific rules are in place
  community.general.ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    src: "{{ item.src }}"
  loop: "{{ host_specific_firewall_rules }}"
