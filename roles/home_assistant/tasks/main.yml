---
- name: Ensure zip is installed
  package:
    name:
      - zip
      - unzip
    state: present

- name: Ensure Home Assistant group exists
  group:
    name: home-assistant
    gid: "{{ home_assistant_user_group_id }}"
    state: present

- name: Ensure Home Assistant user exists
  user:
    name: "{{ home_assistant_user }}"
    uid: "{{ home_assistant_user_id }}"
    password: "{{ home_assistant_user_password }}"
    groups: docker, home-assistant
    state: present
    append: yes

- name: Ensure Home Assistant folder exists
  file:
    path: "{{ home_assistant_home_folder }}/config"
    state: directory
    owner: "{{ home_assistant_user }}"
    group: home-assistant
    mode: 0755

- name: Allow direct access to home assistant
  community.general.ufw:
    rule: allow
    port: "8123"
    proto: tcp
    src: "{{ item }}"
  loop: "{{ allowed_direct_access_to_home_assistant }}"
  notify: reload ufw

- name: Ensure home assistant docker network exists
  community.docker.docker_network:
    name: "{{ home_assistant_docker_network }}"
    ipam_config:
      - subnet: "{{ home_assistant_docker_network_subnet }}"
        gateway: "{{ home_assistant_docker_network_gateway }}"
    state: present
    appends: yes

- name: Ensure home assistant config is present
  synchronize:
    src: home_assistant_config/
    group: false
    delete: true
    recursive: true
    dest: "{{ home_assistant_home_folder }}/config/"
    rsync_opts:
      - "--exclude=secrets.yml"
      - "--exclude=.HA_VERSION"
      - "--exclude=.storage"
      - "--exclude=.cloud"
      - "--exclude=deps"
      - "--exclude=custom_components"
      - "--exclude=home_assistant_v2.db"
      - "--exclude=home_assistant_v2.db-shm"
      - "--exclude=home_assistant_v2.db-wal"
  notify: restart home assistant

- name: Ensure home assistant secrets are present
  template:
    src: secrets.yaml
    dest: "{{ home_assistant_home_folder }}/config/secrets.yaml"
    group: home-assistant
    mode: 0644
    owner: "{{ home_assistant_user }}"
  notify: restart home assistant

- name: Ensure correct home assistant docker-compose file is present
  template:
    src: docker-compose.yml
    dest: "{{ home_assistant_home_folder }}"
    mode: 0644
    group: home-assistant
    owner: "{{ home_assistant_user }}"
  notify: restart home assistant

- name: Ensure hacs is downloaded
  get_url:
    url: "https://github.com/hacs/integration/releases/download/{{ hacs_version }}/hacs.zip"
    dest: "{{ home_assistant_home_folder }}/hacs-{{ hacs_version }}.zip"
  register: hacs

- name: Ensure custom components folder exists
  file:
    path: "{{ home_assistant_home_folder }}/config/custom_components"
    state: directory
    owner: "{{ home_assistant_user }}"
    group: home-assistant
    mode: 0755

- name: Ensure hacs folder exists
  file:
    path: "{{ home_assistant_home_folder }}/config/custom_components/hacs"
    state: directory
    owner: "{{ home_assistant_user }}"
    group: home-assistant
    mode: 0755

- name: Unzip hacs
  when: hacs.changed
  unarchive:
    remote_src: true
    src: "{{ home_assistant_home_folder }}/hacs-{{ hacs_version }}.zip"
    dest: "{{ home_assistant_home_folder }}/config/custom_components/hacs/"
  notify: restart home assistant

- name: Register old hacs versions
  find:
    paths: "{{ home_assistant_home_folder }}"
    excludes:
      - "hacs-{{ hacs_version }}.zip"
    patterns: hacs-.*\.zip
    use_regex: true
  register: old_hacs_versions

- name: Delete old hacs versions
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: " {{ old_hacs_versions['files'] }}"

- name: Ensure home assistant is running
  community.docker.docker_compose:
    project_src: "{{ home_assistant_home_folder }}"
    state: present





